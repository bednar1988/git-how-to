git config --global user.name/user.email/core.editor -> this works for all project
git config (without global) - use in repository to make configuration only for this repository

git init path - make new git repo, path may exist or not

git add - add file to git, needs to be made to every new file and after each change

git rm - remove file from project

git status - show status of files in your repo, -s for short, -v for verbose

git log - view commit log

git commit - commits the changes, -m add comment while commiting, -a include all modified files 

git branch - creates a new branch, -d deletes branch

git checkout branch_name - switches to another branch, git status can show which branch are you on

git merge - used to merge two branches, first switch to the branch that you want to merge into

git rebase - similiar to merge, but works like replaying the changes from other branch not merging the final result

git revert - reverts the changes, "git revert HEAD" reverts last commit, "git revert HEAD~2" reverts last-2 commits

git diff - shows difference between commits, or current working tree and last commit

git clone - clone either local or remote repository

git fetch - fetch changes but do not apply them to local repo

git pull - pull changes to local repo

git push - push changes to remote repo/origin "git push -u origin master" - push local master to originating repo

git remote - show origin, -v
git remote add origin git@github.com:bednar1988/git-how-to.git - add repo from github as origin to be able to push files there
git remote set-url origin git@github.com:bednar1988/git-how-to.git - change origin url
